/*================================================================
*   Copyright (C) 2016 All rights reserved.
*   
*   filename     :main.cpp
*   author       :qinlibin
*   create date  :2016/04/08
*   mail         :qin_libin@foxmail.com
*
================================================================*/
#include <iostream>
#include <vector>
#include <algorithm>
#include <iomanip>
using namespace std;
struct T
{
    int idx;
    double pprice;
    T(int i,double p)
    {
        idx = i;
        pprice = p;
    }

};


bool comparet(T p1,T p2)
{
    if(p1.pprice < p2.pprice)
        return false;
    else
        return true;
}

bool compare(pair<int,double> p1,pair<int,double> p2)
{
    if(p1.second < p2.second)
        return false;
    else
        return true;
}
 
int main()
{
   int N,D;
   cin>>N>>D;
   vector<double> stores,prices;
   vector<pair<int,double> > pprices;
   vector<T> tpprices;
   double s,p;
   double sum = 0;
   for(int i = 0; i < N; i++)
   {
       cin>>s;
       stores.push_back(s);
   }
   for(int i = 0; i < N; i++)
   {
       cin>>p;
       prices.push_back(p);
       //pprices.push_back(pair<int,double>(i,1.0*p/stores[i]));
       tpprices.push_back(T(i,1.0*p/stores[i]));
   }
    sort(tpprices.begin(),tpprices.end(),comparet);
    for(int i = 0; i < N;i++)
    {
        if(stores[tpprices[i].idx] <= D)
        {
            sum += prices[tpprices[i].idx];
            D -= stores[tpprices[i].idx];
        }
        else
        {
            sum += D * tpprices[i].pprice;
            D = 0;
            break;
        }
    }      
   cout<<fixed<<setprecision(2)<<sum<<endl;
    
   return 0;
}
